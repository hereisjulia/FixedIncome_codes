library(jrvFinance)
library(data.table)
library(dplyr)
library(lubridate)
library(readr)
library(ggplot2)
library(tidyverse)

DATE <- function(yyyy,mm,dd) {
  dte  <- as.Date(sprintf("%i-%i-%i",yyyy,mm,dd),format="%Y-%m-%d")
  return(dte)
}
as.Date2 <- function(x) {
  tryfmt <- c("%Y-%m-%d","%m/%d/%Y","%Y/%m/%d","%b %d,%Y")
  return(as.Date(x,tryFormats=tryfmt))
}


#Q1

bond_data <- fread("./datas/TeamAssignment1_Q1.csv")

#1a
settle_date <- as.Date("2023-12-15")
conv <- "ACT/ACT"
comp.freq <- 2

yields <- numeric(nrow(bond_data))  

for(i in 1:nrow(bond_data)) {
  maturity <- as.Date(bond_data$maturity[i])
  coupon <- bond_data$coupon[i]
  clean.price <- bond_data$clean.price[i]
  
  yields[i] <- bond.yield(settle_date, maturity, coupon, comp.freq, clean.price, conv, comp.freq)
}

bond_data$YTM <- yields
print(bond_data$YTM)

#1b

bond_data$AccruedInterest <- numeric(nrow(bond_data))
bond_data$FullPrice <- numeric(nrow(bond_data))
bond_data$MarketValue <- numeric(nrow(bond_data))

for(i in 1:nrow(bond_data)) {
  maturity <- as.Date2(bond_data$maturity[i])
  coupon <- bond_data$coupon[i]
  clean_price <- bond_data$clean.price[i]
  face_value <- bond_data$face.value[i]
  
  accint <- bond.TCF(settle_date, maturity, coupon, comp.freq, conv)$accrued
  bond_data$AccruedInterest[i] <- round(accint, 4)
  
  full_price <- clean_price + accint
  bond_data$FullPrice[i] <- round(full_price, 4)
  
  bond_data$MarketValue[i] <- full_price * face_value / 100
}

total_mv_portfolio <- sum(bond_data$MarketValue)
total_mv_portfolio


#1c

settle <- DATE(2023,12,15)
mature1 <- DATE(2025,05,15)
mature2 <- DATE(2028,08,15)
mature3 <- DATE(2032,05,15)
mature4 <- DATE(2040,08,15)
freq <- 2
fv1 <- 4000000
fv2 <- 5000000
fv3 <- 6000000
fv4 <- 7000000
coupon1 <-0.0275
coupon2 <-0.02875
coupon3 <-0.0275
coupon4 <-0.03875

date1 <-coupons.dates(settle,mature1,freq)
cashflow1 <-fv1*coupon1
dt1 <- data.table(date = date1, cashflow = rep(cashflow1,length(date1)))
dt1[which.max(date), cashflow := cashflow + fv1]

date2 <-coupons.dates(settle,mature2,freq)
cashflow2 <-fv2*coupon2
dt2 <- data.table(date = date2, cashflow = rep(cashflow2,length(date2)))
dt2[which.max(date), cashflow := cashflow + fv2]

date3 <-coupons.dates(settle,mature3,freq)
cashflow3 <-fv3*coupon3
dt3 <- data.table(date = date3, cashflow = rep(cashflow3,length(date3)))
dt3[which.max(date), cashflow := cashflow + fv3]

date4 <-coupons.dates(settle,mature4,freq)
cashflow4 <-fv4*coupon4
dt4 <- data.table(date = date4, cashflow = rep(cashflow4,length(date4)))
dt4[which.max(date), cashflow := cashflow + fv4]

combined_dt <- rbind(dt1, dt2, dt3, dt4, fill=TRUE)

combined_dt_summarized <- combined_dt %>%
  group_by(date) %>%
  summarise(total_cashflow = sum(cashflow))

data.tp <- t(combined_dt_summarized)
final.dt<- as.data.table(data.tp)

#1d

cf <-c(-total_mv_portfolio,combined_dt_summarized$total_cashflow)
cf.t<-c(0:51)
data.table (t = cf.t, cf=cf)
IRR <- irr(cf=cf,comp.freq=comp.freq,cf.t=cf.t,r.guess=0.1)
round(IRR,4)



##### Q2
bond_data2 <- fread("TeamAssignment1_Q2_bonds.csv")
bond <- bond_data2[bond_data2$team[11]]
strips_data <- fread("TeamAssignment1_Q2_strips.csv")

bond_data2[, maturity := as.Date(maturity)]
strips_data[, maturity := as.Date(maturity)]
settle <- DATE(2023,12,15)

coupon_quarter <- bond$coupon / 4 * 100

#Cashflows
payment_dates <- strips_data[maturity > settle & maturity <= bond$maturity, maturity]
payment_dates <- sort(unique(payment_dates))
bond_cash_flows <- rep(coupon_quarter, length(payment_dates))
bond_cash_flows <- c(bond_cash_flows, 100)
last_payment_date <- payment_dates[length(payment_dates)]
payment_dates <- c(payment_dates, last_payment_date)

bond_cash_flow_schedule <- data.table(Date = payment_dates, CashFlow = bond_cash_flows)

#arbitrage price
combined_data <- merge(bond_cash_flow_schedule, strips_data[type == "ci"], by.x = "Date", by.y = "maturity")

sp_row <- strips_data[type == "sp" & maturity == combined_data[nrow(combined_data), Date]]

if (nrow(sp_row) == 1) {
  combined_data[nrow(combined_data), `:=` (
    type = sp_row$type,
    pbid = sp_row$pbid,
    pask = sp_row$pask
  )]
}

arbi_bid <- coupon_quarter * sum(combined_data$pbid[1:(nrow(combined_data)-1)]) / 100 + combined_data$pbid[nrow(combined_data)]
arbi_ask <- coupon_quarter * sum(combined_data$pask[1:(nrow(combined_data)-1)]) / 100 + combined_data$pask[nrow(combined_data)]
arbi_bid <- round(arbi_bid,3)
arbi_ask <- round(arbi_ask,3)

arbi_profit1 <- ifelse(bond$pbid > arbi_ask, "Yes", "No")
arbi_profit2 <- ifelse(bond$pask > arbi_bid, "Yes", "No")


#Answer
print(paste("Buy STRIPS/Sell bond: Pay", arbi_ask, "and Get", bond$pbid, "; Arbitrage profit:", arbi_profit1))
print(paste("Buy bond/Sell STRIPS: Pay", arbi_bid, "and Get", bond$pask, "; Arbitrage profit:", arbi_profit2))




##### Q3
Q2STRIPS <- strips_data
Q3data <- read_csv("TeamAssignment1_Q3.csv")

settlement <- as.Date("2023-12-15")

# use the coupon strips only for discount rate
Q2STRIPS_ci <- filter(Q2STRIPS, type == "ci")
Q2STRIPS_ci$price <-  (Q2STRIPS_ci$pbid + Q2STRIPS_ci$pask)/2

## Discount Factor
Q2STRIPS_ci$discount <- Q2STRIPS_ci$price/100

## Interporation
ttm <- as.numeric((Q2STRIPS_ci$maturity - settlement)/365)
newttm <- as.numeric((Q3data$Date - settlement)/365)
cubic_spline <- as.data.frame(spline(as.numeric(ttm), 
                                     Q2STRIPS_ci$discount, 
                                     xout = newttm,
                                     method = "natural"))
Q3data$Discount <- cubic_spline$y

### plot the interporation
names(cubic_spline) <- c("ttm", "discount")
cubic_spline$type <- "interporation"

interporation <- data.frame(
  ttm = as.numeric(ttm),
  discount = Q2STRIPS_ci$discount,
  type = "origin")
interporation <- rbind(interporation,cubic_spline)

ggplot(interporation)+
  geom_point(aes(x = ttm, y = discount, color = type))+
  labs(title = "Cubic spline on discount factors")+
  theme_minimal()


#######  3a #######
## Which payout option, A or B, has the highest value?

optionA_value <- sum(Q3data$Amount * Q3data$Discount)
optionB_value <- 79000000

print(c(optionA_value, optionB_value))

## Payout option A has the highest value


#######  3b #######
# we can use the spot rate to get the price of the STRIPS of each lottery payments
comp.freq <- 1
Q3data$Price <- Q3data$Amount/(1 + Q3data$spote_rate/comp.freq)^(comp.freq*newttm)
q3b_sell <- sum(Q3data$Price)


print(paste("the lottery winner receive", round(q3b_sell,2), "from selling coupon STRIPS.", "This is", round(q3b_sell - optionA_value,2), "higher than the payment PV 79862180."))

#######  3c  #######
cubic_pask <- as.data.frame(spline(as.numeric(ttm), 
                                   Q2STRIPS_ci$pask, 
                                   xout = newttm,
                                   method = "natural"))

cubic_bidask <- data.frame(Q3data, pask = cubic_pask$y)
cubic_bidask$Dept_fund_unit <- cubic_bidask$Amount/100
cubic_bidask$Dept_fund <- cubic_bidask$Dept_fund_unit * cubic_bidask$pask

print(paste("The payment department need to fund:", round(sum(cubic_bidask$Dept_fund),2),
            ". They will spend", round(sum(cubic_bidask$Dept_fund) - optionA_value,2), "more than the lottery PV", round(optionA_value,2)))







