for (i in 1:nper){
maturity <- liab$maturity[i]
spot <- liab$spot[i]
liab$Dmod[i] <- bond.duration(settle, maturity, coupon = 0, freq, spot, modified = TRUE, freq)
}
nper <- 10
liab <- data.table(period=c(1:nper))
liab[, maturity := seq(from=as.IDate("2021-06-30"),to=as.IDate("2030-06-30"),by="year")]
liab[, ttm := as.numeric(maturity-settle)/365]
liab[, cf  := 10000]
CI[, pmid := 0.5 * (pask + pbid)]
CI[, ttm := as.numeric(maturity-settle)/365]
CI[, spot := zcb.yield(pmid, ttm, freq)]
liab$spot <- spline(CI$ttm, CI$spot, xout = liab$ttm)$y
liab[, disfac := 1/(1+spot/freq) ^ (freq*ttm)]
liab[, PV := cf * disfac]
liab[, weight := PV /sum(PV)]
for (i in 1:nper){
maturity <- liab$maturity[i]
spot <- liab$spot[i]
liab$Dmod[i] <- bond.duration(settle, maturity, coupon = 0, freq, spot, modified = TRUE, freq)
}
View(liab)
for (i in 1:nper){
maturity <- liab$maturity[i]
spot <- liab$spot[i]
liab$Dmod[i] <- bond.duration(settle, maturity, coupon = 0, freq, spot, "ACT/ACT", modified = TRUE, freq)
}
for (i in 1:nper){
maturity <- liab$maturity[i]
spot <- liab$spot[i]
liab$Dmod[i] <- bond.duration(settle, maturity, coupon = 0, freq, spot, "ACT/ACT", modified = TRUE, freq)
}
################ Modified Duration of a Liability ##################
CI <- fread("./datas/cstrips.csv")
settle <- as.IDate("2021-03-25")
nper <- 10
liab <- data.table(period=c(1:nper))
liab[, maturity := seq(from=as.IDate("2021-06-30"),to=as.IDate("2030-06-30"),by="year")]
liab[, ttm := as.numeric(maturity-settle)/365]
liab[, cf  := 10000]
CI[, pmid := 0.5 * (pask + pbid)]
CI[, ttm := as.numeric(maturity-settle)/365]
CI[, spot := zcb.yield(pmid, ttm, freq)]
liab$spot <- spline(CI$ttm, CI$spot, xout = liab$ttm)$y
liab[, disfac := 1/(1+spot/freq) ^ (freq*ttm)]
liab[, PV := cf * disfac]
liab[, weight := PV /sum(PV)]
for (i in 1:nper){
maturity <- liab$maturity[i]
spot <- liab$spot[i]
liab$Dmod[i] <- bond.duration(settle, maturity, coupon = 0, freq, spot, "ACT/ACT", modified = TRUE, freq)
}
sum(liab$Dmod * liab$weight)
round(sum(liab$Dmod * liab$weight), 4)
################ Modified Duration of a Liability ##################
CI <- fread("./datas/cstrips.csv")
settle <- as.IDate("2021-03-25")
nper <- 10
liab <- data.table(period=c(1:nper))
liab[, maturity := seq(from=as.IDate("2021-06-30"),to=as.IDate("2030-06-30"),by="year")]
liab[, ttm := as.numeric(maturity-settle)/365]
liab[, cf  := 10000]
CI[, pmid := 0.5 * (pask + pbid)]
CI[, ttm := as.numeric(maturity-settle)/365]
CI[, spot := zcb.yield(pmid, ttm, freq)]
liab$spot <- spline(CI$ttm, CI$spot, xout = liab$ttm)$y
liab[, disfac := 1/(1+spot/freq) ^ (freq*ttm)]
liab[, PV := cf * disfac]
liab[, weight := PV /sum(PV)]
liab[, dmod := ttm / (1 + spot /2)]
round(sum(liab$dmod * liab$weight), 4)
View(liab)
################ Modified Duration of a Liability ##################
CI <- fread("./datas/cstrips.csv")
settle <- as.IDate("2021-03-25")
nper <- 10
liab <- data.table(period=c(1:nper))
liab[, maturity := seq(from=as.IDate("2021-06-30"),to=as.IDate("2030-06-30"),by="year")]
liab[, ttm := as.numeric(maturity-settle)/365]
liab[, cf  := 10000]
CI[, pmid := 0.5 * (pask + pbid)]
CI[, ttm := as.numeric(maturity-settle)/365]
CI[, spot := zcb.yield(pmid, ttm, freq)]
liab$spot <- spline(CI$ttm, CI$spot, xout = liab$ttm)$y
liab[, disfac := zcb.price(liab$spot,liab$ttm)/100]
liab[, PV := cf * disfac]
liab[, weight := PV /sum(PV)]
liab[, dmod := ttm / (1 + spot /2)]
round(sum(liab$dmod * liab$weight), 4)
View(liab)
nper <- 10
liab <- data.table(period=c(1:nper))
liab[, maturity := seq(from=as.IDate("2021-06-30"),to=as.IDate("2030-06-30"),by="year")]
liab[, ttm := as.numeric(maturity-settle)/365]
liab[, cf  := 10000]
CI[, pmid := 0.5 * (pask + pbid)]
CI[, ttm := as.numeric(maturity-settle)/365]
CI[, spot := zcb.yield(pmid, ttm, freq)]
liab$spot <- spline(CI$ttm, CI$spot, xout = liab$ttm)$y
liab[, disfac := zcb.price(liab$spot,liab$ttm)/100]
liab[, PV := cf * disfac]
liab[, weight := PV /sum(PV)]
liab[, dmod := ttm / (1 + spot /2)]
round(sum(liab$dmod * liab$weight), 4)
################ Modified Duration of a Liability ##################
CI <- fread("./datas/cstrips.csv")
settle <- as.IDate("2021-03-25")
nper <- 10
liab <- data.table(period=c(1:nper))
liab[, maturity := seq(from=as.IDate("2021-06-30"),to=as.IDate("2030-06-30"),by="year")]
liab[, ttm := as.numeric(maturity-settle)/365]
liab[, cf  := 10000]
CI[, pmid := 0.5 * (pask + pbid)]
CI[, ttm := as.numeric(maturity-settle)/365]
CI[, spot := zcb.yield(pmid, ttm, freq)]
liab$spot <- spline(CI$ttm, CI$spot, xout = liab$ttm, method = "natural")$y
liab[, disfac := zcb.price(liab$spot,liab$ttm)/100]
liab[, PV := cf * disfac]
liab[, weight := PV /sum(PV)]
liab[, dmod := ttm / (1 + spot /2)]
round(sum(liab$dmod * liab$weight), 4)
View(liab)
################ Modified Duration of a Liability ##################
CI <- fread("./datas/cstrips.csv")
settle <- as.IDate("2021-03-25")
nper <- 10
liab <- data.table(period=c(1:nper))
liab[, maturity := seq(from=as.IDate("2021-06-30"),to=as.IDate("2030-06-30"),by="year")]
liab[, ttm := as.numeric(maturity-settle)/365]
liab[, cf  := 10000]
CI[, pmid := 0.5 * (pask + pbid)]
CI[, ttm := as.numeric(maturity-settle)/365]
CI[, spot := zcb.yield(pmid, ttm, freq)]
liab$spot <- spline(CI$ttm, CI$spot, xout = liab$ttm, method = "natural")$y
liab[, disfac := zcb.price(liab$spot,liab$ttm)/100]
liab[, PV := cf * disfac]
liab[, weight := PV /sum(PV)]
liab[, dmod := ttm / (1 + spot /2)]
View(liab)
df <- data.table(
bond = c("A","B"),
maturity = c("2023-02-15", "2029-08-15"),
coupon = c(0.01375, 0.01625),
yield = c(0.00141, 0.01448))
settle <- as.IDate("2021-03-25")
df <- data.table(
bond = c("A","B"),
maturity = AS.IDate(c("2023-02-15", "2029-08-15")),
coupon = c(0.01375, 0.01625),
yield = c(0.00141, 0.01448))
df <- data.table(
bond = c("A","B"),
maturity = as.IDate(c("2023-02-15", "2029-08-15")),
coupon = c(0.01375, 0.01625),
yield = c(0.00141, 0.01448))
settle <- as.IDate("2021-03-25")
target_D <- 5
df
for (i in 1:nrow(df)){
maturity <- df$maturity[i]
coupon <- df$coupon[i]
yield <- df$yield[i]
df$dmod[i] <- bond.duration(settle, maturity, coupon, freq, yield, "ACT/ACT", modified = TRUE, freq)]
for (i in 1:nrow(df)){
maturity <- df$maturity[i]
coupon <- df$coupon[i]
yield <- df$yield[i]
df$dmod[i] <- bond.duration(settle, maturity, coupon, freq, yield, "ACT/ACT", modified = TRUE, freq)
}
df
wA <- (target_D - df$dmod[2]) / (df$dmod[1] - df$dmod[2])
wA
round(wA, 4)
install.packages("httr")
install.packages("httr")
install.packages("rvest")
library(httr)
library(httr)
library(rvest)
library(rvest)
url <- "https://www.wsj.com/market-data/bonds/treasuries"
GET(url)
library(ggplot2)
library(data.table)
fread("./datas/wsjFeb3.csv")
fread("./datas/wsjFeb3.xlsx")
library(readxl)
library(readxl)
read_excel("./datas/wsjFeb3.xlsx")
as.data.table(read_excel("./datas/wsjFeb3.xlsx"))
df <- as.data.table(read_excel("./datas/wsjFeb3.xlsx"))
df <- as.data.table(read_excel("./datas/wsjFeb3.xlsx"))
df
names(df) <- c("maturity", "coupon", "pbid", "pask", "change", "ask_yield")
df
df$maturity <- as.Date(df$maturity)
df
df$maturity <- as.Date(df$maturity, format = "%m/%d/%y")
df
df <- df[, -"change"]
df
df <- df[, -"change"]
library(data.table)
library(data.table)
fread("./datas/midterm/Sample_midterm_Q2.csv")
Q2 <- fread("./datas/midterm/Sample_midterm_Q2.csv")
View(Q2)
zcb.price <- function(zcb.yield, ttm, freq = 2){
return(100 /(1 - zcb.yield /freq) ^ (freq*ttm))
}
zcb.yield <- function(zcb.price, ttm, freq = 2){
return(freq * ((100 /zcb.price) ^(1 /(freq*ttm))-1))
}
Q2[, spot := 0]
for (i in 1:2){
Q2$spot[i] <- zcb.yield(Q2$Price[i], Q2$Maturity[i])
}
Q2[, disfac := 1]
names(Q2)
Q2[, disfac := 1/(1+ YIeld/ 2)^(2*Maturity)]
View(Q2)
Q2[3:4, spot := 2*( (1/disfac)^(1/(2*Maturity))-1) ]
for ( i in 3:4){
df$spot[i] <- 2*( (1/disfac[i])^(1/(2*Maturity[i]))-1)
}
for ( i in 3:4){
df$spot[i] <- 2*( (1 /df$disfac[i])^(1/(2 *df$Maturity[i]))-1)
}
Q2 <- fread("./datas/midterm/Sample_midterm_Q2.csv")
Q2[, spot := 0]
Q2[, disfac := 1/(1+ YIeld/ 2)^(2*Maturity)]
for (i in 1:2){
Q2$spot[i] <- zcb.yield(Q2$Price[i], Q2$Maturity[i])
Q2$disfac[i] <- Q2$pfull[i]/ ( 100 + Q2$coupon[i] *100 /2)
}
for ( i in 3:4){
Q2$spot[i] <- 2*( (1 /Q2$disfac[i])^(1/(2 *Q2$Maturity[i]))-1)
}
data.table()
View(Q2)
for (i in 1:2){
Q2$spot[i] <- zcb.yield(Q2$Price[i], Q2$Maturity[i])
Q2$disfac[i] <- Q2$pfull[i]/ ( 100 + Q2$coupon[i] *100 /2)
}
for (i in 1:2){
Q2$spot[i] <- zcb.yield(Q2$Price[i], Q2$Maturity[i])
}
Q2$disfac[1] <- Q2$Price[1]/(100+Q2$Coupon[1]*100/2)
Q2$disfac[1] <- Q2$Price[1]/(100+Q2$Coupon[1]*100/2)
for (i in 2:nrow(Q2)) {
cumdf <- sum(Q2$disfac[1:i-1])
Q2$disfac[i] <- ( Q2$Price[i] - Q2$Coupon[i]*100/2 * cumdf ) /
(100 + Q2$Coupon[i]*100/2 )
}
for ( i in 3:4){
Q2$spot[i] <- 2*( (1 /Q2$disfac[i])^(1/(2 *Q2$Maturity[i]))-1)
}
Q2$disfac[1] <- Q2$Price[1]/(100+Q2$Coupon[1]*100/2)
for (i in 2:nrow(Q2)) {
cumdf <- sum(Q2$disfac[1:i-1])
Q2$disfac[i] <- ( Q2$Price[i] - Q2$Coupon[i]*100/2 * cumdf ) /
(100 + Q2$Coupon[i]*100/2 )
}
for ( i in 1:nrow(Q2)){
Q2$spot[i] <- 2*( (1 /Q2$disfac[i])^(1/(2 *Q2$Maturity[i]))-1)
}
Q2 <- fread("./datas/midterm/Sample_midterm_Q2.csv")
Q2$disfac[1] <- Q2$Price[1]/(100+Q2$Coupon[1]*100/2)
for (i in 2:nrow(Q2)) {
cumdf <- sum(Q2$disfac[1:i-1])
Q2$disfac[i] <- ( Q2$Price[i] - Q2$Coupon[i]*100/2 * cumdf ) /
(100 + Q2$Coupon[i]*100/2 )
}
for ( i in 1:nrow(Q2)){
Q2$spot[i] <- 2*( (1 /Q2$disfac[i])^(1/(2 *Q2$Maturity[i]))-1)
}
Q2b <- Q2[3,]
Q2b
Q2b[, Coupon := 0.05]
Q2b
Q2b[. 1:4]
Q2b[, 1:4]
Q2b <- Q2[3, 1:4]
Q2b[, Coupon := 0.05]
Q2b
Q2[3, 1:4][, Coupon := 0.05]
Q2[3, 1:4]
#### Q2 ####
Q2 <- fread("./datas/midterm/Sample_midterm_Q2.csv")
Q2$disfac[1] <- Q2$Price[1]/(100+Q2$Coupon[1]*100/2)
for (i in 2:nrow(Q2)) {
cumdf <- sum(Q2$disfac[1:i-1])
Q2$disfac[i] <- ( Q2$Price[i] - Q2$Coupon[i]*100/2 * cumdf ) /
(100 + Q2$Coupon[i]*100/2 )
}
for ( i in 1:nrow(Q2)){
Q2$spot[i] <- 2*( (1 /Q2$disfac[i])^(1/(2 *Q2$Maturity[i]))-1)
}
Q2[3, 1:4]
Q2b <- Q2[3, 1:4]
Q2b[, Coupon = 0.05]
Q2b[, Coupon := 0.05]
data.table(
Period = seq(0, Q2b$Period, by = 1),
cf = c(0, rep(100*Q2b$Coupon, 2), 100+100*Q2b$Coupon)
)
Q2b <- Q2[3, 1:4]
Q2b[, Coupon := 0.05]
data.table(
Period = seq(0, Q2b$Period, by = 1),
cf = c(0, rep(100*Q2b$Coupon, 2), 100+100*Q2b$Coupon),
disfac = c(0, Q2$disfac[1:3])
)
Q2b <- data.table(
Period = seq(0, Q2b$Period, by = 1),
cf = c(0, rep(100*Q2b$Coupon, 2), 100+100*Q2b$Coupon),
disfac = c(0, Q2$disfac[1:3])
)
Q2b
Q2b[, PV := cf*disfac]
sum(Q2b$PV)
Q2b <- Q2[3, 1:4]
Q2b[, Coupon := 0.05]
Q2b <- data.table(
Period = seq(0, Q2b$Period, by = 1),
cf = c(0, rep(100*Q2b$Coupon/2, 2), 100+100*Q2b$Coupon/2),
disfac = c(0, Q2$disfac[1:3])
)
Q2b[, PV := cf*disfac]
sum(Q2b$PV)
Q3 <- fread("./datas/midterm/Sample_midterm_Q3.csv")
View(Q3)
############
#### Q4 ####
############
Q4 <- fread("./datas/midterm/Sample_midterm_Q4.csv")
############
#### Q4 ####
############
Q4 <- fread("./datas/midterm/Sample_midterm_Q4.csv")
############
#### Q5 ####
############
Q5 <- fread("./datas/midterm/Sample_midterm_Q5.csv")
View(Q5)
View(Q5)
as.IDate("2018-12-24")
settle <- as.IDate("2018-12-24")
View(Q5)
Q5[, ttm := as.numeric(maturity - settle)]
Q5 <- fread("./datas/midterm/Sample_midterm_Q5.csv")
settle <- as.IDate("2018-12-24")
Q5[, ttm := as.numeric(maturity - settle)/365]
newttm <- as.numeric(as.IDate("2019-07-30") - settle)/365
spline(Q5$ttm, Q5$spot, xout = newttm, method = "natural")
spline(Q5$ttm, Q5$spot, xout = newttm, method = "natural")$y
lm(spot ~ ttm + ln(ttm))
ln(ttm)
lm(spot ~ ttm + log(ttm), data = Q5)
Q5b_reg1 <- lm(spot ~ ttm + log(ttm), data = Q5)
Q5b_reg1$coefficients
Q5b_reg1$coefficients[1]
Reg1 <- function(ttm){
Z.t <- Q5b_reg1$coefficients[1] + Q5b_reg1$coefficients[2]*ttm + Q5b_reg1$coefficients[3] * log(ttm)
return(Z.t)
}
Reg(newttm)
Reg1(newttm)
Q5b_reg1$coefficients
Reg1(newttm)
Q5b_reg1$coefficients[[1]]
newttm <- as.numeric(as.IDate("2019-07-30") - settle)/365
spline(Q5$ttm, Q5$spot, xout = newttm, method = "natural")$y
Q5b_reg1 <- lm(spot ~ ttm + log(ttm), data = Q5)
Reg1 <- function(ttm){
Z.t <- Q5b_reg1$coefficients[[1]] + Q5b_reg1$coefficients[[2]]*ttm + Q5b_reg1$coefficients[[3]] * log(ttm)
return(Z.t)
}
Reg1(newttm)
spline(Q5$ttm, Q5$spot, xout = newttm, method = "natural")$y
## C
Q5b_reg2 <- lm(spot ~ ttm + (1/ttm))
## C
Q5b_reg2 <- lm(spot ~ ttm + I(1/ttm), data = Q5)
## C
Q5_reg2 <- lm(spot ~ ttm + I(1/ttm), data = Q5)
Q5_reg2
Q5_reg2$coefficients
Reg2 <- function(ttm){
Z.t <- Q5_reg2$coefficients[[1]] + Q5_reg2$coefficients[[2]]*ttm + Q5_reg2$coefficients[[3]] * log(ttm)
return(Z.t)
}
Reg2(newttm)
## D
Q5_reg3 <- lm(spot ~ ttm + I(log(1+ttm)) + I(1/(1+ttm) -1), data = Q5)
Q5_reg3$coefficients
## C
Q5_reg2 <- lm(spot ~ ttm + I(1/ttm), data = Q5)
Reg2 <- function(ttm){
Z.t <- Q5_reg2$coefficients[[1]] + Q5_reg2$coefficients[[2]]*ttm + Q5_reg2$coefficients[[3]] * 1/ttm
return(Z.t)
}
Reg2(newttm)
Q5_reg3$coefficients
## D
Q5_reg3 <- lm(spot ~ ttm + I(log(1+ttm)) + I(1/(1+ttm) -1), data = Q5)
Reg3 <- function(ttm){
Z.t <- Q5_reg3$coefficients[[1]] + Q5_reg3$coefficients[[2]]*ttm +
Q5_reg3$coefficients[[3]] * log(1+ttm) +
Q5_reg3$coefficients[[4]] * (1/(1+ttm) -1)
return(Z.t)
}
Reg3(newttm)
Reg1(newttm)
Reg2(newttm)
Reg3(newttm)
spline(Q5$ttm, Q5$spot, xout = newttm, method = "natural")$y
funds <- 100000000
freq <- 2
target_Dmod <- 5
# set up nloptr()
K <- nrow(Q4)
Wstart <- rep(1/K,K)
predict(Q5_reg2, newdata = newttm)
Dmod <- Q4$ModDur
nlopt<- nloptr(x0=x,
eval_f=eval_f,
eval_grad_f=eval_grad_f,
lb = lb,
ub = ub,
eval_g_eq = eval_g,
eval_jac_g_eq = eval_jac_g,
opts=opts)
install.packages("nloptr")
library(nloptr)
library(nloptr)
nlopt<- nloptr(x0=x,
eval_f=eval_f,
eval_grad_f=eval_grad_f,
lb = lb,
ub = ub,
eval_g_eq = eval_g,
eval_jac_g_eq = eval_jac_g,
opts=opts)
eval_f <- function( x ){
return( (sum(x*Dmod)-Target)^2 ) }
eval_grad_f <- function( x ){
return( 2*(sum(x*Dmod)-Target) * Dmod ) }
eval_g <- function( x ){
eval_grad_g <- function( x ){
return( rep(-1,K) ) }
opts = list("algorithm" = "NLOPT_LD_SLSQP",
"xtol_rel"=1.0e-8,
"print_level" = 2,
"check_derivatives" = TRUE,
"check_derivatives_print" = "all")
nlopt<- nloptr(x0=x,
eval_f=eval_f,
eval_grad_f=eval_grad_f,
lb = lb,
ub = ub,
eval_g_eq = eval_g,
eval_jac_g_eq = eval_jac_g,
opts=opts)
>
eval_f <- function( x ){
return( (sum(x*Dmod)-Target)^2 ) }
eval_grad_f <- function( x ){
return( 2*(sum(x*Dmod)-Target) * Dmod ) }
eval_g <- function( x ){
eval_g <- function( x ){
return( (1-sum(x) ) }
return( (1-sum(x) )}
eval_g <- function( x ){return( (1-sum(x) )}
eval_g <- function( x ){return( (1-sum(x) )}
eval_g <- function( x ){return( (1-sum(x) )
eval_g <- function( x ){return( (1-sum(x) )}
eval_g <- function( x ){ return( (1-sum(x) )}
eval_g <- function( x ){ return( (1-sum(x) ))}
eval_grad_g <- function( x ){
return( rep(-1,K) ) }
opts = list("algorithm" = "NLOPT_LD_SLSQP",
"xtol_rel"=1.0e-8,
"print_level" = 2,
"check_derivatives" = TRUE,
"check_derivatives_print" = "all")
nlopt<- nloptr(x0=x,
eval_f=eval_f,
eval_grad_f=eval_grad_f,
lb = lb,
ub = ub,
eval_g_eq = eval_g,
eval_jac_g_eq = eval_jac_g,
opts=opts)
target_Dmod <- 5
Q4
# portfolio A using 5 and 10 yr T notes
Wa.5yr <- (target_Dmod - Q4$ModDur[5]) / (Q4$ModDur[4] - Q4$ModDur[5])
Wa.5yr
1 - Wa.5yr
Portfolio.A <- c(Wa.5yr, 1-Wa.5yr)
# Portfolio B includes 3 and 30 yr T securities
Wb.3yr <- (target_Dmod - Q4$ModDur[6]) / (Q4$ModDur[3] - Q4$ModDur[6])
Portfolio.B <- c(Wb.3yr, 1-Wb.3yr)
Portfolio.A
Portfolio.B
Q4
Conv.A <- Portfolio.A * Q4$Convexity[c(4,5)]
Conv.A <- sum(Portfolio.A * Q4$Convexity[c(4,5)])
Conv.B <- sum(Portfolio.B * Q4$Convexity[c(3,6)])
Conv.A > Conv.B
