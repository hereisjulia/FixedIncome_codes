sr3fut
Re <- 100 - sr3fut[StartDt == t1]$SettlePrice
sr3fut[StartDt == t1]$SettlePrice
t1 <- as.IDate("2027-12-15")
sr3fut[StartDt == t1]$SettlePrice
Re <- 100 - sr3fut[StartDt == t1]$SettlePrice
SR_init <- sr3fut[StartDt == t1]$SettlePrice
Re <- 100 - SR_init
t0 <- as.Date("2024-01-09")
t1 <- as.IDate("2027-12-15")
t2 <- as.Date("2028-03-15")
sofr = getSymbols('SOFR',src='FRED',auto.assign=FALSE)
sofr = na.omit(sofr)
sofr = as.data.table(sofr)
names(sofr) = c('Date','SOFR')
sofr = na.omit(sofr)
sofr = as.data.table(sofr)
names(sofr) = c('Date','SOFR')
sofr[, SOFR := SOFR/100]
if (!(t1 %in% sofr$Date)){
tmp = data.table(Date = t1, SOFR = NA)
sofr = rbind(sofr,tmp)
}
t0 <- as.IDate("2024-01-09")
t2 <- as.IDate("2028-03-15")
sofr = getSymbols('SOFR',src='FRED',auto.assign=FALSE)
sofr = na.omit(sofr)
sofr = as.data.table(sofr)
names(sofr) = c('Date','SOFR')
sofr[, SOFR := SOFR/100]
if (!(t1 %in% sofr$Date)){
tmp = data.table(Date = t1, SOFR = NA)
sofr = rbind(sofr,tmp)
}
t0 <- as.IDate("2024-01-09")
t1 <- as.IDate("2027-12-15")
t2 <- as.IDate("2028-03-15")
SR_init <- sr3fut[StartDt == t1]$SettlePrice
Re <- 100 - SR_init
sofr = getSymbols('SOFR',src='FRED',auto.assign=FALSE)
sofr = na.omit(sofr)
sofr = as.data.table(sofr)
names(sofr) = c('Date','SOFR')
sofr[, SOFR := SOFR/100]
if (!(t1 %in% sofr$Date)){
tmp = data.table(Date = t1, SOFR = NA)
sofr = rbind(sofr,tmp)
}
sofr
data <- sofr[Date >= t1 & Date <= t2]
data[, di := c(as.numeric(diff(Date)), 0)]
data[, gross_daily_rate := 1 + SOFR*di/360]
data[, cum_prod := cumprod(gross_daily_rate)]
D <- sum(data$di)
R <- (data[(.N -1)]$cum_prod[1] - 1) * 360/D *100
data <- sofr[Date >= t1 & Date <= t2]
data
sofr
class(data$Date)
t0 <- as.Date("2024-01-09")
t1 <- as.Date("2027-12-15")
t2 <- as.Date("2028-03-15")
SR_init <- sr3fut[StartDt == t1]$SettlePrice
Re <- 100 - SR_init
sofr = getSymbols('SOFR',src='FRED',auto.assign=FALSE)
sofr = na.omit(sofr)
sofr = as.data.table(sofr)
names(sofr) = c('Date','SOFR')
sofr[, SOFR := SOFR/100]
data <- sofr[Date >= t1 & Date <= t2]
data[, di := c(as.numeric(diff(Date)), 0)]
data
data <- sofr[Date >= t1 & Date <= t2]
data
sofr$Date - t1
sofr
sr3fut
Re
t0 <- as.Date("2024-01-09")
t1 <- as.Date("2027-12-15")
t2 <- as.Date("2028-03-15")
SR_init <- sr3fut[StartDt == t1]$SettlePrice
SR_init
Re <- 100 - SR_init
Re
# start question 5
t0 <- as.Date("2024-01-09")
t1 <- as.Date("2027-12-15")
t2 <- as.Date("2028-06-21")
sr3fut
Re2 <- sr3fut[StartDt == as.Date("2028-03-15")]$SettlePrice
Re2
Re2 <- 100 - sr3fut[StartDt == as.Date("2028-03-15")]$SettlePrice
Re2
t1.5 <- as.Date("2028-03-15")
data.table(R = c(Re1, Re2),
di = c( t1.5 - t1, t2 - t1.5 ))
Re1 <- Re
Re2 <- 100 - sr3fut[StartDt == as.Date("2028-03-15")]$SettlePrice
data.table(R = c(Re1, Re2),
di = c( t1.5 - t1, t2 - t1.5 ))
data.table(R = c(Re1, Re2),
di = as.numeric(c( t1.5 - t1, t2 - t1.5 )))
data <- data.table(R = c(Re1, Re2),
di = as.numeric(c( t1.5 - t1, t2 - t1.5 )))
data[, gross_daily_rate := 1 + R*di/360]
data
data
data[, cum_prod := cumprod(gross_daily_rate)]
data
data
R <- (data[(.N -1)]$cum_prod[1] - 1) * 360/D *100
data
R
round(SR3_final, 4)
data[, cum_prod := cumprod(gross_daily_rate)]
data
data$cum_prod[.N]
data[.N]$cum_prod
D <- sum(data$di)
data[.N]$cum_prod *360/D *100
data[.N]$cum_prod *360/D
(data[.N]$cum_prod - 1) *360/D
R <- (data[.N]$cum_prod - 1) *360/D
round(R, 4)
initial.twd <- 100
twd.cad <- 0.043
twd.usd <- 0.032
usd.cad <- 1.35
c(initial.twd * twd.cad, initial.twd * twd.usd)
initial.usd <- initial.twd* twd.usd
c(initial.usd * usd.cad)
c(initial.twd * twd.cad, initial.twd * twd.usd)
c(initial.usd * usd.cad)
initial.usd
setwd("E:/MQM_Courses/Term4/FixedIncomeSecurities/FixedIncome_codes/datas")
load("TeamAssignment3_sr3fut_Q1.RData")
setwd("E:/MQM_Courses/Term4/FixedIncomeSecurities/FixedIncome_codes/datas")
load("TeamAssignment3_sr3fut_Q1.RData")
settle <- as.Date("2023-12-29")
library(readr)
library(readr)
setwd("E:/MQM_Courses/Term4/DataVisualization/Assignments")
read_csv("2024-Auction Company Extract_Extract.csv")
setwd("E:/MQM_Courses/Term4/DataVisualization/Assignments")
auction <- read_csv("2024-Auction Company Extract_Extract.csv")
auction
View(auction)
library(data.table)
library(data.table)
auction <- fread("2024-Auction Company Extract_Extract.csv")
names(auction)
table(auction$`Item Industry Name`)
library(tidyverse)
table(auction$`Item Industry Name`) %>% sort(decreasing = TRUE)
names(auction)
auction[, names(auction) %LIKE% "item"]
auction[, names(auction) %like% "item"]
names(auction) %like% "item"
library(stringr)
str_detect(names(auction), 'item')
names(auction) %like% "Item"
auction[,names(auction) %like% "Item"]
auction[names(auction) %like% "Item"]
auction[, names(auction) %like% "Item"]
auction[, names() %like% "Item"]
names(auction) %like% "Item"
auction[names(auction) %like% "Item"]
auction[, names(auction) %like% "Item"]
names(auction) %like% "Item"
auction[, names(auction) %like% "Item", with =FALSE]
item <- auction[, names(auction) %like% "Item", with =FALSE]
View(item)
ncol(item)
ncol(auction)
level(item$`Item Category Name`)
levels(item$`Item Category Name`)
factor(item$`Item Category Name`)
unique(item$`Item Category Name`)
unique(item$`Item Category Name`) %>% count()
unique(item$`Item Category Name`)
unique(item$`Item Category Name`) %>% length()
unique(item$`Item Industry Name`) %>% length()
unique(item$`Item Industry Name`)
unique(item$`Item Make`) %>% length()
unique(item$`Item Make`)
unique(item$`Item Model`) %>% length()
unique(item$`Item Model`)
unique(item$`Item Model`) %>% length()
unique(item$`Item Serial Number`) %>% length()
unique(item$`Item Serial Number`)
unique(item$`Item Model Year`) %>% length()
unique(item$`Item Model Year`)
unique(item$`Item Usage Hours`) %>% length()
unique(item$`Item Usage Hours`)
unique(item$`Item Fee Code`)
unique(item$`Item Fee Description`)
unique(item$`Item Fee Description`) %>% length()
unique(item$`Item Fee Name`) %>% length()
unique(item$`Item Fee Name`)
unique(item$`Item Fee Type`) %>% length()
unique(item$`Item Fee Type`)
unique(item$`Item Fee Type`) %>% length()
unique(item$`Item Fee Amount`) %>% length()
unique(item$`Item Fee Amount`)
table(item$`Item Fee Amount`) %>% sort(decreasing = TRUE)
names(auction)
auction[,"Sold Price"]
auction[, c("Sold Price", "Total Sale")]
auction[, c("Sold Price", "Total Sale", "Item Fee Amount")]
auction[, c("Current Bid", "Sold Price", "Total Sale", "Item Fee Amount")]
sum(auction$`Sold Price` - auction$`Current Bid` != 0)
unique(item$`Item Fee Code`)
unique(item$`Item Fee Description`)
prices <- auction[, c("Current Bid", "Sold Price", "Total Sale", "Item Fee Amount")]
prices[, Gain := `Total Sale` - `Sold Price`]
prices
unique(item$`Item Family Name`)
for (i in 1:ncol(auction)){
if (unique(auction[, i]) == nrow(auction)){
print(names(auction)[i])
}
}
for (name in names(auction)){
if (unique(auction$name) == nrow(auction)){
print(name)
}
}
auction[["Auction Close Time"]]
for (name in names(auction)){
if (unique(auction[[name]]) == nrow(auction)){
print(name)
}
}
unique(auction[["Item Industry Name"]]) == nrow(auction)
for (name in names(auction)){
if (length(unique(auction[[name]])) == nrow(auction)){
print(name)
}
}
uniquesss <- 0
for (name in names(auction)){
if (length(unique(auction[[name]])) > uniquesss){
uniquesss <- length(unique(auction[[name]]))
print(name)
}
}
uniquesss
nrow(auction)
nrow(auction) - uniquesss
table(auction$`Item Unique ID`)
table(auction$`Item Unique ID`)>1
table(auction$`Item Unique ID`)
auction[Item Unique ID == 444688,]
auction[`Item Unique ID` == 444688,]
table(auction$`Item Unique ID`)
install.packages("Rpostgres")
install.packages("RPostgres")
settle <- as,Date("2023-09-29")
settle <- as.Date("2023-09-29")
P <- 94.63
t0 <- as.Date("2023-09-20")
t1 <- as.Date("2023-09-29")
t2 <- as.Date("2023-12-20")
P <- 94.63
# sample R file to upload for individual assignment
# please place the R code for each question in the space provided below.
library(data.table)
# sample R file to upload for individual assignment
# please place the R code for each question in the space provided below.
library(data.table)
library(jrvFinance)
library(ggplot2)
library(jrvFinance)
library(ggplot2)
library(quantmod)
library(quantmod)
setwd("E:/MQM_Courses/Term4/FixedIncomeSecurities/FixedIncome_codes/datas")
load("IndividualAssignment4_sr3fut.RData")
settle <- as.Date("2022-12-14")
notional <- 20000000
fixed.rate <- 0.049
df1 <- data.table(year = seq(0,2,by = 1),
pay.date = seq(as.Date("2022-12-14"), as.Date("2024-12-14"), by = "year"))
for (i in 1:nrow(df1)){
if (i == 1) {
df1$D[i] <- as.numeric(df1$pay.date[i] -settle)
} else{
df1$D[i] <- as.numeric(df1$pay.date[i] -df1$pay.date[i-1])
}
}
df1[, fixed.cf := fixed.rate * D/360 * notional]
answer2 = df1[pay.date == "2023-12-14",fixed.cf]                     ###### replace with the numerical answer for question 2
cat("Answer Q2:", answer2)
df1
settle <- as.Date("2024-06-30")
sr3.fut[, forw := 1 - SettlePrice/100]
sofr <- getSymbols('SOFR',src='FRED',auto.assign=FALSE)
sr3.fut[3]
t1 <- sr3.fut$StartDt[3]
t2 <- settle
t1
t2
sr3.fut$MatDt[3]
data <- data.table(date = c(t1,t2),
sofr = sofr[[length(sofr)]])
data[, di := c(as.numeric(diff(date)),0)]
data[, gross_daily_rate := 1 + sofr/100*di/360 ]
data[, cum_rate := cumprod(gross_daily_rate) ]
Da <- sum(data$di)
Ra <- (data[(.N-1)]$cum_rate[1] -1)*360/Da*100
Re <- sr3.fut$forw[3]*100
D <- as.numeric(sr3.fut$MatDt[3] - t1)
Rb <- ( (1+Re/100* D/360) / (1+Ra/100 * Da/360) - 1 ) * 360 / (D-Da) * 100
sr3.fut$StartDt[3] = settle
sr3.fut$forw[3] = Rb/100
sr3.fut2 <- sr3.fut[-c(1,2)]
Dfac = data.table(date=c(sr3.fut2$StartDt[1],sr3.fut2$MatDt))
Dfac[, di := c(0,as.numeric(diff(date)))]
Dfac[, forw:= c(0,sr3.fut2$forw)]
Dfac[, disfac := 1]
for (i in 2:nrow(Dfac)) {
Dfac$disfac[i] = Dfac$disfac[i-1]/(1+Dfac$forw[i]*Dfac$di[i]/360)
}
Dfac[,.(date,di,forw,disfac)]
answer3 = Dfac[date == settle, disfac]                      ###### replace with the numerical answer for question 3
cat("Answer Q3:", answer3)
data
sr3.fut
Re <- 1-P
Re
Re <- 100-P
Re
sofr <- getSymbols('SOFR',src='FRED',auto.assign=FALSE)
sofr
sofr <- as.data.table(getSymbols('SOFR',src='FRED',auto.assign=FALSE))
sofr
sofr[index > t0 & index < t1,]
class(sofr$index )
class(sofr$index)
class(t1)
t1
t1 <- as.Date("2023-09-29")
t2 <- as.Date("2023-12-20")
sofr[index > t0 & index < t1,]
sofr <- sofr[index > t0 & index < t1,]
sofr[di := c(as.numeric(diff(index)),0)]
sofr[di := c(as.numeric(diff(index)),0)]
sofr[di := c(as.numeric(diff(index)),0),]
sofr[,di := c(as.numeric(diff(index)),0)]
sofr
sofr[, gross_daily_rate := 1 + SOFR/100*di/360 ]
sofr
sofr[, cum_rate := cumprod(gross_daily_rate)]
sofr
Da <- sum(sofr$di)
Da
data <- sofr[date >= t1 & date <= t2]
settle <- as.Date("2024-01-09")
t1 <- sr3.fut$StartDt[1]
t2 <- settle
t3 <- sr3.fut$MatDt[1]
c(t1, t2, t3)
sofr <- as.data.table(sofr)
sofr <- na.omit(sofr)
names(sofr) <- c("date", "sofr")
setwd("E:/MQM_Courses/Term4/FixedIncomeSecurities/FixedIncome_codes/datas")
load("IndividualAssignment4_sr3fut.RData")
###### question 2 start ######
settle <- as.Date("2022-12-14")
notional <- 20000000
fixed.rate <- 0.049
df1 <- data.table(year = seq(0,2,by = 1),
pay.date = seq(as.Date("2022-12-14"), as.Date("2024-12-14"), by = "year"))
for (i in 1:nrow(df1)){
if (i == 1) {
df1$D[i] <- as.numeric(df1$pay.date[i] -settle)
} else{
df1$D[i] <- as.numeric(df1$pay.date[i] -df1$pay.date[i-1])
}
}
df1[, fixed.cf := fixed.rate * D/360 * notional]
answer2 = df1[pay.date == "2023-12-14",fixed.cf]                     ###### replace with the numerical answer for question 2
cat("Answer Q2:", answer2)
###### question 2 end   ######
###### question 3 start ######
settle <- as.Date("2024-06-30")
sr3.fut[, forw := 1 - SettlePrice/100]
sofr <- getSymbols('SOFR',src='FRED',auto.assign=FALSE)
sr3.fut[3]
t1 <- sr3.fut$StartDt[3]
t2 <- settle
t1
t2
sr3.fut$MatDt[3]
data <- data.table(date = c(t1,t2),
sofr = sofr[[length(sofr)]])
data[, di := c(as.numeric(diff(date)),0)]
data[, gross_daily_rate := 1 + sofr/100*di/360 ]
data[, cum_rate := cumprod(gross_daily_rate) ]
Da <- sum(data$di)
data[(.N-1)]$cum_rate[1]
data
data[(.N-1)]$cum_rate
Ra <- (sofr[(.N-1)]$cum_rate -1)*360/Da*100
Ra
sofr[(.N-1)]
sofr[(.N-1)]$cum_rate
# Calculate Ra
sofr <- as.data.table(getSymbols('SOFR',src='FRED',auto.assign=FALSE))
sofr <- sofr[index > t0 & index < t1,]
sofr[,di := c(as.numeric(diff(index)),0)]
sofr[, gross_daily_rate := 1 + SOFR/100*di/360 ]
sofr[, cum_rate := cumprod(gross_daily_rate)]
Da <- sum(sofr$di)
sofr[(.N-1)]
sofr
# Calculate Ra
sofr <- as.data.table(getSymbols('SOFR',src='FRED',auto.assign=FALSE))
sofr <- sofr[index > t0 & index < t1,]
sofr[,di := c(as.numeric(diff(index)),0)]
sofr[, gross_daily_rate := 1 + SOFR/100*di/360 ]
sofr[, cum_rate := cumprod(gross_daily_rate)]
sofr
# Calculate Ra
sofr <- as.data.table(getSymbols('SOFR',src='FRED',auto.assign=FALSE))
sofr <- sofr[index > t0 & index < t1,]
sofr
# Calculate Ra
sofr <- as.data.table(getSymbols('SOFR',src='FRED',auto.assign=FALSE))
sofr
sofr <- sofr[index > t0 & index < t1,]
sofr
sofr[index > t0 & index < t1,]
t0 <- as.Date("2023-09-20")
t1 <- as.Date("2023-09-29")
t2 <- as.Date("2023-12-20")
# Calculate Ra
sofr <- as.data.table(getSymbols('SOFR',src='FRED',auto.assign=FALSE))
sofr <- sofr[index > t0 & index < t1,]
sofr
sofr[,di := c(as.numeric(diff(index)),0)]
sofr[, gross_daily_rate := 1 + SOFR/100*di/360 ]
sofr[, cum_rate := cumprod(gross_daily_rate)]
sofr
Da <- sum(sofr$di)
sofr[(.N-1)]
sofr[(.N-1)]$cum_rate
Ra <- (sofr[(.N-1)]$cum_rate -1)*360/Da*100
Ra
Db <- as.numeric(t2 - t1)
Db
Da
Rb <- ( (1+Re/100* D/360) / (1+Ra/100 * Da/360) - 1 ) * 360 / (D-Da) * 100
Rb
# Q7b
sofr_R <- function(date1,date2,spread=0) {
if (class(date1)=='character') {date1 = as.Date(date1)}
if (class(date2)=='character') {date2 = as.Date(date2)}
# download the daily SOFR data from FRED, removing all dates with NAs:
sofr = getSymbols('SOFR',src='FRED',auto.assign=FALSE)
sofr = na.omit(sofr)
# Convert 'sofr' to a data.table, with 'Date' and 'SOFR' as two columns
sofr = as.data.table(sofr)
names(sofr) = c('Date','SOFR')
# divide SOFR by 100 to get the interest rate into decimal form
sofr[, SOFR := SOFR/100]
# create dataset with SOFR for date1 to date2
# check if date1 is in sofr$Date
if (!(date1 %in% sofr$Date)) {
tmp = data.table(Date=date1,SOFR=NA)
sofr = rbind(sofr,tmp)
}
# check if date2 is in sofr$Date
if (!(date2 %in% sofr$Date)) {
tmp = data.table(Date=date2,SOFR=NA)
sofr = rbind(sofr,tmp)
}
# sort sofr by Date
setorder(sofr,Date)
# fill in missing dates using previous non-missing data
sofr[, SOFR := na.locf(SOFR)]
# create data with dates starting on date1 and ending on date2
data = sofr[Date>=date1 & Date<=date2]
# find the number of calendar days for each SOFR:
data[, di := c(as.numeric(diff(Date)),0) ]
# calculate the gross interest for each row
data[, gross_daily_rate := 1 + (SOFR+spread)*di/360 ]
# calculate cumulative product of the gross interest
data[, cum_prod := cumprod(gross_daily_rate) ]
# D is the number of calendar days in the interest payment period
D = sum(data$di)
# calculate the simple (i.e. non-compounding) interest rate from date1 to date2
R = round((data[(.N-1),]$cum_prod[1]-1)*100*360/D,5)
return(c(R=R,D=D))
}
t1 <- as.Date("2023-12-31")
t0 <- as.Date("2023-07-01")
t1 <- as.Date("2023-12-31")
sofr_R(t0, t1)
sofr_R(t0, t1)
sofr_R(t0, t1)$R
sofr_R(t0, t1)[1]
sofr_R(t0, t1)[1] * sofr_R(t0, t1)[2]/360 * 1000000
sofr_R(t0, t1)[1] * sofr_R(t0, t1)[2]/360
sofr_R(t0, t1)
numbers <- sofr_R(t0, t1)
numbers <- sofr_R(t0, t1, spread = 0.01)
numbers
numbers[1] * numbers[2]/360 * 1000000
numbers[1]
numbers[1]/100 * numbers[2]/360 * 1000000
