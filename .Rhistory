settle <- as.Date("2023-12-15")
maturity3 <- as.Date("2053-02-15")
face <- 10000000
coupon3 <- 0.03625
cleanP <- 92.2190
haircut <- 0.02
reporate <- 0.0531
freq <- 2
fullP <- cleanP + bond.TCF(settle, maturity3, coupon3, freq, "ACT/ACT")$accrued
Value_of_position <- fullP/100 *face
repo_amount <- Value_of_position * (1 - haircut)
repoint <- repo_amount * reporate * 1/360
round(repoint,2)
bond.TCF(settle,maturity2,coupon)
settle <- as.Date("2023-12-15")
maturity2 <- as.Date("2052-05-15")
coupon <- 0.02875
freq <- 2
bond.TCF(settle,maturity2,coupon)
coupons.dates(settle, maturity2)
coupons.dates(settle, maturity2, freq)
bond.TCF(settle,maturity2,coupon,freq)
coupons.dates(settle, maturity2, freq)
bond.TCF(settle,maturity2,coupon,freq)
CI[maturity %in% coupons.dates(settle, maturity2, freq)]
# start question 2
CI <- fread("IndividualAssignment02-ci.csv")
SP <- fread("IndividualAssignment02-sp.csv")
CI[maturity %in% coupons.dates(settle, maturity2, freq)]
Discount <- CI[maturity %in% coupons.dates(settle, maturity2, freq)]$price
Discount <- CI[maturity %in% coupons.dates(settle, maturity2, freq)]$price /100
TCF <- bond.TCF(settle,maturity2,coupon,freq)
View(SP)
View(CI)
TCF$cf
TCF$cf[57]
TCF$cf[57] <- TCF$cf[57]-100
TCF
TCF * Discount
Discount
class(TCF$cf)
class(Discount)
TCF$cf * Discount
SP[maturity == maturity2]
SP[maturity == maturity2][,2]
TCF$cf * Discount + SP[maturity == maturity2][,2]
TCF$cf * Discount + SP[maturity == maturity2][,2]
TCF$cf * Discount
sum(TCF$cf * Discount) + SP[maturity == maturity2][,2]
sum(TCF$cf * Discount) + SP[maturity == maturity2][,2] - TCF$accrued
settle <- as.Date("2023-12-15")
coupon <- 0.02875
freq <- 2
maturity2 <- as.Date("2052-05-15")
Discount <- CI[maturity %in% coupons.dates(settle, maturity2, freq)]$price /100
coupons.dates(settle, maturity2, freq)
TCF <- bond.TCF(settle,maturity2,coupon,freq)
TCF
sum(TCF$cf * Discount) + SP[maturity == maturity2][,2] - TCF$accrued
# start question 2
CI <- fread("IndividualAssignment02-ci.csv")
SP <- fread("IndividualAssignment02-sp.csv")
settle <- as.Date("2023-12-15")
coupon <- 0.02875
freq <- 2
maturity2 <- as.Date("2052-05-15")
Discount <- CI[maturity %in% coupons.dates(settle, maturity2, freq)]$price /100
TCF <- bond.TCF(settle,maturity2,coupon,freq)
TCF$cf[57] <- TCF$cf[57]-100
sum(TCF$cf * Discount) + SP[maturity == maturity2][,2] - TCF$accrued
CI$spot_rate <- zcb.yield(CI$price, ttm, comp.freq = 4)
zcb.yield <- function(zcb.price,ttm,comp.freq=2) {
return( comp.freq * ( (100/zcb.price)^(1/(comp.freq*ttm)) - 1 ) )
}
CI$spot_rate <- zcb.yield(CI$price, ttm, comp.freq = 4)
# start question 5
settle <- as.Date("2023-12-15")
pension_payment2 <-  data.table(`Payment Date` = c("2024-06-30", "2025-06-30","2026-06-30","2027-06-30","2028-06-30"),
`Payment Amount` = 100000)
pension_payment2$`Payment Date` <- as.Date(pension_payment2$`Payment Date`)
zcb.yield <- function(zcb.price,ttm,comp.freq=2) {
return( comp.freq * ( (100/zcb.price)^(1/(comp.freq*ttm)) - 1 ) )
}
CI$spot_rate <- zcb.yield(CI$price, ttm, comp.freq = 4)
ttm <- as.numeric(CI$maturity - as.IDate(settle))
CI$spot_rate <- zcb.yield(CI$price, ttm, comp.freq = 4)
View(CI)
View(CI)
irr(TCF$cf, cf.freq = 2, comp.freq = 2)
cashflows <- c(-1000, 200, 300, 400, 500)
class(cashflows)
class(TCF$cf)
irr(c(0,TCF$cf), cf.freq = 2, comp.freq = 2)
irr(c(-100,TCF$cf), cf.freq = 2, comp.freq = 2)
TCF$cf
TCF <- bond.TCF(settle,maturity2,coupon,freq)
irr(c(-100,TCF$cf), cf.freq = 2, comp.freq = 2)
R <- irr(c(-100,TCF$cf), cf.freq = 2, comp.freq = 2)
?bond.price
bond.price(settle,maturity2,coupon,freq,R,"ACT/ACT")
cashflows <- c(-100, 1.125, 1.125,1.125,101.125)
irr(cashflows, 2,2)
irr(cashflows, cf.freq = 2, comp.freq = 2))
irr(cashflows, cf.freq = 2, comp.freq = 2)
R <- irr(c(-100,TCF$cf), cf.freq = 2, comp.freq = 2)*2
bond.price(settle,maturity2,coupon,freq,R,"ACT/ACT")
R <- irr(c(-100,TCF$cf), cf.freq = 2, comp.freq = 2)
bond.price(settle,maturity2,coupon,freq,R,"ACT/ACT")
TCF <- bond.TCF(settle,maturity2,coupon,freq)
settle <- as.Date("2023-12-15")
maturity2 <- as.Date("2052-05-15")
coupon <- 0.02875
freq <- 2
Discount <- CI[maturity %in% coupons.dates(settle, maturity2, freq)]$price /100
TCF <- bond.TCF(settle,maturity2,coupon,freq)
TCF$cf[57] <- TCF$cf[57]-100
sum(TCF$cf * Discount) + SP[maturity == maturity2][,2] - TCF$accrued
settle <- as.Date("2023-12-15")
maturity2 <- as.Date("2052-05-15")
coupon <- 0.02875
freq <- 2
?irr
irr(c(-100, TCF$cf), freq = 2, comp.freq =2)
irr(c(-100, TCF$cf), cf.freq = freq, comp.freq =freq)
TCF <- bond.TCF(settle,maturity2,coupon,freq)
irr(c(-100, TCF$cf), cf.freq = freq, comp.freq =freq)
R< <- irr(c(-100, TCF$cf), cf.freq = freq, comp.freq =freq)
R <- irr(c(-100, TCF$cf), cf.freq = freq, comp.freq =freq)
row(TCF)
nrow(TCF$cf)
coupons.dates(settle, maturity2, freq)
library(tidyverse)
DSC <- as.Date("2024-05-15") - settle %>% as.numeric()
coupons.dates(settle, maturity2, freq)
E <- as.Date("2024-05-15") - as.Date("2023-11-15") %>% as.numeric()
for (i in 1:length(TCF$cf)){
PV[i] <- TCF$cf[i] / (1+R/freq) ^ (i-1+DSC/E)
}
class(DSC)
DSC <- as.numeric(as.Date("2024-05-15") - settle %>% as.numeric())
E <- as.numeric(as.Date("2024-05-15") - as.Date("2023-11-15"))
for (i in 1:length(TCF$cf)){
PV[i] <- TCF$cf[i] / (1+R/freq) ^ (i-1+DSC/E)
}
PV <- NA
for (i in 1:length(TCF$cf)){
PV[i] <- TCF$cf[i] / (1+R/freq) ^ (i-1+DSC/E)
}
sum(PV)
PV
TCF$cf[57] <- TCF$cf[57]-100
PV <- NA
for (i in 1:length(TCF$cf)){
PV[i] <- TCF$cf[i] / (1+R/freq) ^ (i-1+DSC/E)
}
sum(PV)
length(PV)
sum(PV) + 100/(1+R/freq) ^ (length(PV)-1 + DSC/E)
sum(PV) + 100/(1+R/freq) ^ (length(PV)-1 + DSC/E) - TCF$accrued
TFC$cf
TCF$cf
###########################old###############################
Discount <- CI[maturity %in% coupons.dates(settle, maturity2, freq)]$price /100
TCF <- bond.TCF(settle,maturity2,coupon,freq)
TCF$cf[57] <- TCF$cf[57]-100
sum(TCF$cf * Discount) + SP[maturity == maturity2][,2] - TCF$accrued
1000000 * ( 1 - BDR * d/360)
library(jrvFinance)
library(jrvFinance)
library(data.table)
library(data.table)
library(dplyr)
library(dplyr)
library(lubridate)
library(readr)
library(readr)
library(ggplot2)
library(tidyverse)
DATE <- function(yyyy,mm,dd) {
dte  <- as.Date(sprintf("%i-%i-%i",yyyy,mm,dd),format="%Y-%m-%d")
return(dte)
}
as.Date2 <- function(x) {
tryfmt <- c("%Y-%m-%d","%m/%d/%Y","%Y/%m/%d","%b %d,%Y")
return(as.Date(x,tryFormats=tryfmt))
}
bond_data <- fread("TeamAssignment1_Q1.csv")
library(jrvFinance)
library(data.table)
library(dplyr)
library(lubridate)
library(readr)
library(ggplot2)
library(tidyverse)
DATE <- function(yyyy,mm,dd) {
dte  <- as.Date(sprintf("%i-%i-%i",yyyy,mm,dd),format="%Y-%m-%d")
return(dte)
}
as.Date2 <- function(x) {
tryfmt <- c("%Y-%m-%d","%m/%d/%Y","%Y/%m/%d","%b %d,%Y")
return(as.Date(x,tryFormats=tryfmt))
}
bond_data <- fread("TeamAssignment1_Q1.csv")
bond_data <- fread("./data/TeamAssignment1_Q1.csv")
bond_data <- fread("./datas/TeamAssignment1_Q1.csv")
#1a
settle_date <- as.Date("2023-12-15")
conv <- "ACT/ACT"
comp.freq <- 2
yields <- numeric(nrow(bond_data))
for(i in 1:nrow(bond_data)) {
maturity <- as.Date(bond_data$maturity[i])
coupon <- bond_data$coupon[i]
clean.price <- bond_data$clean.price[i]
yields[i] <- bond.yield(settle_date, maturity, coupon, comp.freq, clean.price, conv, comp.freq)
}
bond_data$YTM <- yields
print(bond_data$YTM)
View(bond_data)
?irr()
library(data.table)
library(data.table)
fread("./datas/TeamAssignment2_Q1")
fread("./datas/TeamAssignment2_Q1.csv")
# Q1
Q1data <- fread("./datas/TeamAssignment2_Q1.csv")
# Q1
Q1data <- fread("./datas/TeamAssignment2_Q1.csv")
settle <- as.Date("2023-12-15")
View(Q1data)
freq <- 2
Bond.duration(settle,
Q1data$maturity[1],
Q1data$coupon[1],
freq,yield,"ACT/ACT",modified = TRUE,
comp.freq = freq)
library(jrvFinance)
Bond.duration(settle,
Q1data$maturity[1],
Q1data$coupon[1],
freq,yield,"ACT/ACT",modified = TRUE,
comp.freq = freq)
bond.duration(settle,
Q1data$maturity[1],
Q1data$coupon[1],
freq,yield,"ACT/ACT",modified = TRUE,
comp.freq = freq)
View(Q1data)
# Q2
Q2_bonds <- fread("./data/TeamAssignment2_Q2_bond.csv")
library(data.table)
library(jrvFinance)
library(data.table)
library(jrvFinance)
# Q2
Q2_bonds <- fread("./data/TeamAssignment2_Q2_bond.csv")
settle <- as.Date("2023-12-15")
# Q2
Q2_bonds <- fread("./data/TeamAssignment2_Q2_bond.csv")
library(data.table)
library(jrvFinance)
library(data.table)
library(jrvFinance)
# Q2
Q2_bonds <- fread("./data/TeamAssignment2_Q2_bond.csv")
# Q2
Q2_bonds <- fread("./datas/TeamAssignment2_Q2_bond.csv")
settle <- as.Date("2023-12-15")
?gfun4()
View(Q2_bonds)
View(Q2_bonds)
View(Q2_bonds)
Q2_bonds$ttm <- Q2_bonds$maturity - settle
settle <- as.IDate("2023-12-15")
Q2_bonds$ttm <- Q2_bonds$maturity - settle
Q2_bonds$ttm <- as.numeric(Q2_bonds$maturity - settle)
?bond.TCF
bond.TCF(settle, Q2_bonds$maturity, Q2_bonds$coupon, freq = 2, "ACT/ACT")
for (i in 1:nrow(Q2_bonds)){
Q2_bonds$accint <- bond.TCF(settle, Q2_bonds$maturity[i], Q2_bonds$coupon[i], freq = 2, "ACT/ACT")$accrued
}
Q2_bonds$pfull <- Q2_bonds$pclean + Q2_bonds$accint
?bond.yield
Q2_bonds <- fread("./datas/TeamAssignment2_Q2_bond.csv")
settle <- as.IDate("2023-12-15")
Q2_bonds$ttm <- as.numeric(Q2_bonds$maturity - settle)
Q2_bonds$ttm <- as.numeric(Q2_bonds$maturity - settle)
for (i in 1:nrow(Q2_bonds)){
Q2_bonds$ytm <- bond.yield(settle, Q2_bonds$maturity[i], Q2_bonds$coupon[i], freq = 2, Q2_bonds$pclean[i], "ACT/ACT")$accrued
}
Q2_bonds$ytm <- bond.yield(settle, Q2_bonds$maturity[i], Q2_bonds$coupon[i], freq = 2, Q2_bonds$pclean[i], "ACT/ACT")
for (i in 1:nrow(Q2_bonds)){
Q2_bonds$ytm <- bond.yield(settle, Q2_bonds$maturity[i], Q2_bonds$coupon[i], freq = 2, Q2_bonds$pclean[i], "ACT/ACT")
}
return( comp.freq * ( (100/zcb.price)^(1/(comp.freq*ttm)) - 1 ) )}
zcb.yield <- function(zcb.price,ttm,comp.freq=2) {
return( comp.freq * ( (100/zcb.price)^(1/(comp.freq*ttm)) - 1 ) )}
Q2_bonds$spot_rate <- zcb.yield(Q2_bonds$pclean, Q2_bonds$ttm)
library(ggplot2)
library(ggplot2)
ggplot(Q2_bonds)+
geom_point(aes(x = maturity, y = pclean))
ggplot(Q2_bonds)+
geom_point(aes(x = maturity, y = spot_rate))
ggplot(Q2_bonds)+
geom_point(aes(x = maturity, y = spot_rate, color = coupon))
Q2_bonds <- fread("./datas/TeamAssignment2_Q2_bond.csv")
settle <- as.IDate("2023-12-15")
Q2_bonds$ttm <- as.numeric(Q2_bonds$maturity - settle)
for (i in 1:nrow(Q2_bonds)){
Q2_bonds$ytm <- bond.yield(settle, Q2_bonds$maturity[i], Q2_bonds$coupon[i], freq = 2, Q2_bonds$pclean[i], "ACT/ACT")
}
zcb.yield <- function(zcb.price,ttm,comp.freq=2) {
return( comp.freq * ( (100/zcb.price)^(1/(comp.freq*ttm)) - 1 ) )}
Q2_bonds$spot_rate <- zcb.yield(Q2_bonds$pclean, Q2_bonds$ttm)
prcomp(Q2_bonds$spot_rate)
lm(spot_rate ~ theta[1] + theta[2]*ttm + theta[3] * ttm^2 + theta[4] * ttm^3 + theta[5] * ttm^4 + theta[6] * ttm^5)
lm(spot_rate ~ theta[1] + theta[2]*ttm + theta[3] * ttm^2 + theta[4] * ttm^3 + theta[5] * ttm^4 + theta[6] * ttm^5, data = Q2_bonds)
theta <- c(0.01,0,0,0,0,0)
lm(spot_rate ~ theta[1] + theta[2]*ttm + theta[3] * ttm^2 + theta[4] * ttm^3 + theta[5] * ttm^4 + theta[6] * ttm^5, data = Q2_bonds)
lm(spot_rate ~ theta[1] + theta[2]*ttm + theta[3] * ttm^2 + theta[4] * ttm^3 + theta[5] * ttm^4 + theta[6] * ttm^5, data = Q2_bonds[1,])
Q2_bonds[1,]
lm(spot_rate ~ theta[1] + theta[2]*ttm + theta[3] * ttm^2 + theta[4] * ttm^3 + theta[5] * ttm^4 + theta[6] * ttm^5, data = Q2_bonds[1,])
lm(spot_rate ~ theta[1] + theta[2]*ttm + theta[3] * ttm^2 + theta[4] * ttm^3 + theta[5] * ttm^4 + theta[6] * ttm^5, data = Q2_bonds[1,])
q2a_model <- lm(spot_rate ~ theta[1] + theta[2]*ttm + theta[3] * ttm^2 + theta[4] * ttm^3 + theta[5] * ttm^4 + theta[6] * ttm^5, data = Q2_bonds[1,])
q2a_model$coefficients
spot_rate <- function(price, ttm, comp.freq = 2){
ttm <- as.numeric(ttm)
return(comp.freq * ( (100/price)^(1/comp.freq/ttm) - 1 ) )
}
return(comp.freq * ( (100/price)^(1/comp.freq/ttm) - 1 ) )
spot_rate <- function(price, ttm, comp.freq = 2){
ttm <- as.numeric(ttm)
return(comp.freq * ( (100/price)^(1/comp.freq/ttm) - 1 ) )
}
Q2_bonds$spot_rate <- spot_rate(Q2_bonds$pclean, Q2_bonds$ttm)
theta <- c(0.01,0,0,0,0,0)
q2a_model <- lm(spot_rate ~ theta[1] + theta[2]*ttm + theta[3] * ttm^2 + theta[4] * ttm^3 + theta[5] * ttm^4 + theta[6] * ttm^5, data = Q2_bonds[1,])
q2a_model$coefficients
?predict
?predict()
predict(q2a_model, newdata = Q2_bonds)
# 2b) Compare the actual prices and predicted prices of the bonds based on estimated parameters in part 2a.
Q2_bonds
predict(q2a_model, newdata = Q2_bonds[,c("ttm", "spot_rate")])
predict(q2a_model, newdata = Q2_bonds[,"ttm"])
q2a_model <- lm(spot_rate ~ theta[1] + theta[2]*ttm + theta[3] * I(ttm^2) + theta[4] * I(ttm^3) + theta[5] * I(ttm^4) + theta[6] * I(ttm^5), data = Q2_bonds[1,])
q2a_model$coefficients
predict(q2a_model, newdata = Q2_bonds[,"ttm"])
Q2_bonds[,"ttm"]
q2a_model <- lm(spot_rate ~ ttm + I(ttm^2) + I(ttm^3) + I(ttm^4) + I(ttm^5), data = Q2_bonds[1,])
q2a_model$coefficients
predict(q2a_model, newdata = Q2_bonds[,"ttm"])
q2a_model <- lm(spot_rate ~ ttm + I(ttm^2) + I(ttm^3) + I(ttm^4) + I(ttm^5), data = Q2_bonds[1,])
q2a_model$coefficients
q2a_model <- lm(spot_rate ~ ttm + I(ttm^2) + I(ttm^3) + I(ttm^4) + I(ttm^5), data = Q2_bonds)
q2a_model$coefficients
predict(q2a_model, newdata = Q2_bonds[,"ttm"])
nonlin_yld_reg <- data.table(ttm = Q2_bonds$ttm,
act_spot_rate = Q2_bonds$spot_rate)
nonlin_yld_reg <- data.table(ttm = Q2_bonds$ttm,
act_spot_rate = Q2_bonds$spot_rate)
nonlin_yld_reg$pred_spot_rate <- predict(q2a_model, newdata = Q2_bonds[,"ttm"])
View(nonlin_yld_reg)
ggplot(nonlin_yld_reg)+
geom_point(aes(x = ttm, y = pred_spot_rate))
ggplot(nonlin_yld_reg)+
geom_point(aes(x = ttm, y = pred_spot_rate))+
geom_point(aes(x = ttm, y = act_spot_rate))
ggplot(nonlin_yld_reg)+
geom_point(aes(x = ttm, y = pred_spot_rate, color = "blue"))+
geom_point(aes(x = ttm, y = act_spot_rate))
ggplot(nonlin_yld_reg)+
geom_point(aes(x = ttm, y = pred_spot_rate), color = "blue")+
geom_point(aes(x = ttm, y = act_spot_rate))
ggplot(nonlin_yld_reg)+
geom_point(aes(x = ttm, y = pred_spot_rate), color = "red")+
geom_point(aes(x = ttm, y = act_spot_rate))
library(tidyverse)
nonlin_yld_reg <- data.table(ttm = Q2_bonds$ttm,
actual = Q2_bonds$spot_rate)
nonlin_yld_reg$predict <- predict(q2a_model, newdata = Q2_bonds[,"ttm"])
nonlin_yld_reg_long <- pivot_longer(nonlin_yld_reg, cols = -1, names_to = "type", values_to = "spot_rate")
nonlin_yld_reg <- data.table(ttm = Q2_bonds$ttm,
actual = Q2_bonds$spot_rate)
nonlin_yld_reg$predict <- predict(q2a_model, newdata = Q2_bonds[,"ttm"])
nonlin_yld_reg_long <- pivot_longer(nonlin_yld_reg, cols = -1, names_to = "type", values_to = "spot_rate")
ggplot(nonlin_yld_reg)+
geom_point(aes(x = ttm, y = spot_rate, color = type))
ggplot(nonlin_yld_reg)+
geom_point(aes(x = ttm, y = spot_rate, color = type))
ggplot(nonlin_yld_reg_long)+
geom_point(aes(x = ttm, y = spot_rate, color = type))
ggplot(nonlin_yld_reg_long)+
geom_point(aes(x = ttm, y = spot_rate, color = type))+
labs(title = "Actual & Predicted Spot rate")
ggplot(nonlin_yld_reg_long)+
geom_point(aes(x = ttm, y = spot_rate, color = type))+
labs(title = "Actual & Predicted Spot rate")+
theme_minimal()
theta <- q2a_model$coefficients
theta
# 2c) Use the estimated parameters to “predict” the prices of the coupon strips in the data file:
# TeamAssignment2_Q2_ci.csv. It contains the following information for US treasury securities:
fread("./datas/TeamAssignment2_Q2_ci.csv")
# 2c) Use the estimated parameters to “predict” the prices of the coupon strips in the data file:
# TeamAssignment2_Q2_ci.csv. It contains the following information for US treasury securities:
Q2_ci <- fread("./datas/TeamAssignment2_Q2_ci.csv")
Q2_ci
Q2_ci$ttm <- Q2_ci$maturity - settle
Q2_ci$ttm <- as.numeric(Q2_ci$maturity - settle)
predict(q2a_model, newdata = Q2_ci[,"ttm"])
Q2_ci$predict <- predict(q2a_model, newdata = Q2_ci[,"ttm"])
# 2c) Use the estimated parameters to “predict” the prices of the coupon strips in the data file:
# TeamAssignment2_Q2_ci.csv. It contains the following information for US treasury securities:
Q2_ci <- fread("./datas/TeamAssignment2_Q2_ci.csv")
Q2_ci$ttm <- as.numeric(Q2_ci$maturity - settle)
Q2_ci$pred_spot_rate <- predict(q2a_model, newdata = Q2_ci[,"ttm"])
Q2_bonds <- fread("./datas/TeamAssignment2_Q2_bond.csv")
settle <- as.IDate("2023-12-15")
Q2_bonds$ttm <- as.numeric(Q2_bonds$maturity - settle)
spot_rate <- function(price, ttm, comp.freq = 2){
ttm <- as.numeric(ttm)
return(comp.freq * ( (100/price)^(1/comp.freq/ttm) - 1 ) )
}
Q2_bonds$spot_rate <- spot_rate(Q2_bonds$pclean, Q2_bonds$ttm)
q2a_model <- lm(spot_rate ~ ttm + I(ttm^2) + I(ttm^3) + I(ttm^4) + I(ttm^5), data = Q2_bonds)
theta <- q2a_model$coefficients
theta
nonlin_yld_reg <- data.table(ttm = Q2_bonds$ttm,
actual = Q2_bonds$spot_rate)
nonlin_yld_reg$predict <- predict(q2a_model, newdata = Q2_bonds[,"ttm"])
# plot it
plot1 <- pivot_longer(nonlin_yld_reg, cols = -1, names_to = "type", values_to = "spot_rate")
ggplot(plot1)+
geom_point(aes(x = ttm, y = spot_rate, color = type))+
labs(title = "Actual & Predicted Spot rate")+
theme_minimal()
# 2c) Use the estimated parameters to “predict” the prices of the coupon strips in the data file:
# TeamAssignment2_Q2_ci.csv. It contains the following information for US treasury securities:
Q2_ci <- fread("./datas/TeamAssignment2_Q2_ci.csv")
Q2_ci$ttm <- as.numeric(Q2_ci$maturity - settle)
Q2_ci$pred_spot_rate <- predict(q2a_model, newdata = Q2_ci[,"ttm"])
View(Q2_bonds)
View(nonlin_yld_reg)
nonlin_yld_reg <- data.table(ttm = Q2_bonds$ttm,
act_spot_rate = Q2_bonds$spot_rate)
nonlin_yld_reg$pred_spot_rate <- predict(q2a_model, newdata = Q2_bonds[,"ttm"])
nonlin_yld_reg <- data.table(ttm = Q2_bonds$ttm,
actual_price = Q2_bonds$pclean,
act_spot_rate = Q2_bonds$spot_rate)
nonlin_yld_reg$pred_spot_rate <- predict(q2a_model, newdata = Q2_bonds[,"ttm"])
zcb.price <- function(zcb.yield,ttm,comp.freq=2) {
return( 100/(1+zcb.yield/comp.freq)^(comp.freq*ttm) )
}
nonlin_yld_reg$predict_price <- zcb.price(nonlin_yld_reg$pred_spot_rate, nonlin_yld_reg$ttm)
View(nonlin_yld_reg)
# plot it
plot1 <- pivot_longer(nonlin_yld_reg[,c(1,2,5)], cols = -1, names_to = "type", values_to = "spot_rate")
ggplot(plot1)+
geom_point(aes(x = ttm, y = spot_rate, color = type))+
labs(title = "Actual & Predicted Spot rate")+
theme_minimal()
ggplot(plot1)+
geom_point(aes(x = ttm, y = spot_rate, color = type))+
labs(title = "Actual & Predicted Price")+
theme_minimal()
# 2c) Use the estimated parameters to “predict” the prices of the coupon strips in the data file:
# TeamAssignment2_Q2_ci.csv. It contains the following information for US treasury securities:
Q2_ci <- fread("./datas/TeamAssignment2_Q2_ci.csv")
Q2_ci$ttm <- as.numeric(Q2_ci$maturity - settle)
Q2_ci$pred_spot_rate <- predict(q2a_model, newdata = Q2_ci[,"ttm"])
Q2_ci
Q2_ci$pred_price <- zcb.price(Q2_ci$pred_spot_rate, Q2_ci$ttm)
View(Q2_ci)
Q2_ci[,c(2,3,5)]
# plot it
plot1 <- pivot_longer(nonlin_yld_reg[,c(1,2,5)], cols = -1, names_to = "type", values_to = "price")
ggplot(plot1)+
geom_point(aes(x = ttm, y = price, color = type))+
labs(title = "Actual & Predicted Price")+
theme_minimal()
plot2 <- pivot_longer(Q2_ci[,c(2,3,5)], col = -2, names_to = "type", values_to = "price")
ggplot(plot2)+
geom_point(aes(x = ttm, y = price, color = type))
Q2_sp <- fread("./datas/TeamAssignment2_Q2_sp.csv")
Q2_sp
Q2_sp[, ttm := maturity - settle]
View(Q2_sp)
Q2_sp[, ttm := as.numeric(maturity - settle)]
Q2_ci[, pred_price := zcb.price(Q2_ci$pred_spot_rate, Q2_ci$ttm)]
View(Q2_ci)
plot2 <- pivot_longer(Q2_ci[,c(2,3,5)], col = -2, names_to = "type", values_to = "price")
ggplot(plot2)+
geom_point(aes(x = ttm, y = price, color = type))
Q2_sp <- fread("./datas/TeamAssignment2_Q2_sp.csv")
Q2_sp[, ttm := as.numeric(maturity - settle)]
as.numeric(Q2_sp$maturity - settle)
Q2_sp
Q2_sp[, pred_spot_rate := predict(q2a_model, newdata = ttm)]
Q2_sp[, pred_spot_rate := predict(q2a_model, newdata = Q2_sp$ttm)]
Q2_sp$pred_spot_rate <- predict(q2a_model, newdata = Q2_sp$ttm)
Q2_sp <- fread("./datas/TeamAssignment2_Q2_sp.csv")
Q2_sp[, ttm := as.numeric(maturity - settle)]
Q2_sp$pred_spot_rate <- predict(q2a_model, newdata = Q2_sp$ttm)
Q2_sp$pred_spot_rate <- predict(q2a_model, newdata = Q2_sp[,"ttm"])
Q2_sp[, pred_price := zcb.price(Q2_sp$pred_spot_rate, Q2_sp$ttm)]
Q2_sp[, pred_price := zcb.price(Q2_sp$pred_spot_rate, Q2_sp$ttm)]
Q2_sp$pred_price <- zcb.price(Q2_sp$pred_spot_rate, Q2_sp$ttm)
plot3 <- pivot_longer(Q2_sp[,c(2,3,5)], col = -2, names_to = "type", values_to = "price")
ggplot(plot3)+
geom_point(aes(x = ttm, y = price, color = type))
